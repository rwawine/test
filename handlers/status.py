"""
Status and general handlers
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from keyboards import *
from database import DatabaseManager

def create_status_router(db_manager: DatabaseManager) -> Router:
    """Create status checking router"""
    router = Router()
    
    @router.message(F.text == "üìã –ú–æ–π —Å—Ç–∞—Ç—É—Å")
    async def check_status(message: Message):
        """Check user registration status"""
        participant = db_manager.get_participant_by_telegram_id(message.from_user.id)
        
        if not participant:
            await message.answer(
                "‚ùå –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!\n\n"
                "–ù–∞–∂–º–∏—Ç–µ 'üöÄ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é' –¥–ª—è —É—á–∞—Å—Ç–∏—è.",
                reply_markup=get_main_menu_keyboard()
            )
            return
        
        status_text = {
            'pending': '‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
            'approved': '‚úÖ –û–¥–æ–±—Ä–µ–Ω–∞', 
            'rejected': '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞'
        }.get(participant['status'], participant['status'])
        
        status_description = {
            'pending': '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.',
            'approved': '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.',
            'rejected': '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.'
        }.get(participant['status'], '')
        
        response_text = (
            f"üìã –°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏: {status_text}\n\n"
            f"üë§ –ò–º—è: {participant['full_name']}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {participant['phone_number']}\n"
            f"üí≥ –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏: {participant['loyalty_card']}\n"
            f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {participant['registration_date']}\n\n"
            f"{status_description}"
        )
        
        if participant['admin_notes']:
            response_text += f"\n\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{participant['admin_notes']}"
        
        await message.answer(
            response_text,
            reply_markup=get_status_keyboard()
        )
    
    @router.message(F.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
    async def refresh_status(message: Message):
        """Refresh status - same as check status"""
        await check_status(message)
    
    @router.message(F.text == "üìä –û —Ä–æ–∑—ã–≥—Ä—ã—à–µ")
    async def about_lottery(message: Message):
        """Show lottery information"""
        # Get basic statistics
        stats = db_manager.get_statistics()
        
        info_text = (
            "üéâ –û –Ω–∞—à–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ\n\n"
            f"üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {stats.get('total_participants', 0)}\n"
            f"üèÜ –£–∂–µ –≤—ã–∏–≥—Ä–∞–ª–∏: {stats.get('total_winners', 0)}\n\n"
            "‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:"
        )
        
        await message.answer(
            info_text,
            reply_markup=get_info_menu_keyboard()
        )
    
    @router.callback_query(F.data == "info_rules")
    async def show_rules(callback: CallbackQuery):
        """Show participation rules"""
        rules_text = (
            "üìã –ü—Ä–∞–≤–∏–ª–∞ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ\n\n"
            "‚úÖ –ö—Ç–æ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å:\n"
            "‚Ä¢ –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ –≥—Ä–∞–∂–¥–∞–Ω–µ –†–§\n"
            "‚Ä¢ –í–ª–∞–¥–µ–ª—å—Ü—ã –∫–∞—Ä—Ç –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –û–¥–∏–Ω —É—á–∞—Å—Ç–Ω–∏–∫ = –æ–¥–Ω–∞ –∑–∞—è–≤–∫–∞\n\n"
            "üìù –î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
            "1Ô∏è‚É£ –£–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ\n"
            "2Ô∏è‚É£ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
            "3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ª–∏—Ñ–ª–µ—Ç–∞\n"
            "4Ô∏è‚É£ –î–æ–∂–¥–∞—Ç—å—Å—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏\n\n"
            "‚ö†Ô∏è –í–∞–∂–Ω–æ:\n"
            "‚Ä¢ –ó–∞—è–≤–∫–∏ —Å –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è\n"
            "‚Ä¢ –û–¥–∏–Ω —Ç–µ–ª–µ—Ñ–æ–Ω/–∫–∞—Ä—Ç–∞ = –æ–¥–Ω–∞ –∑–∞—è–≤–∫–∞\n"
            "‚Ä¢ –†–µ—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ"
        )
        
        await callback.message.edit_text(rules_text)
    
    @router.callback_query(F.data == "info_prizes")
    async def show_prizes(callback: CallbackQuery):
        """Show prizes information"""
        prizes_text = (
            "üèÜ –ü—Ä–∏–∑—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n\n"
            "ü•á –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑:\n"
            "‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 50 000 ‚ÇΩ\n\n"
            "ü•à –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã:\n"
            "‚Ä¢ 5 —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ 10 000 ‚ÇΩ\n"
            "‚Ä¢ 10 —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ 5 000 ‚ÇΩ\n"
            "‚Ä¢ 20 —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ 1 000 ‚ÇΩ\n\n"
            "üéÅ –ü–æ–æ—â—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã:\n"
            "‚Ä¢ 100 –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –Ω–∞ —Å–∫–∏–¥–∫—É 20%\n\n"
            "üìã –£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è:\n"
            "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π\n"
            "‚Ä¢ –ü—Ä–∏ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
            "‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã 6 –º–µ—Å—è—Ü–µ–≤"
        )
        
        await callback.message.edit_text(prizes_text)
    
    @router.callback_query(F.data == "info_dates")
    async def show_dates(callback: CallbackQuery):
        """Show important dates"""
        dates_text = (
            "üìÖ –í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n\n"
            "üìù –ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫:\n"
            "‚Ä¢ –ù–∞—á–∞–ª–æ: 1 –æ–∫—Ç—è–±—Ä—è 2024\n"
            "‚Ä¢ –û–∫–æ–Ω—á–∞–Ω–∏–µ: 31 –æ–∫—Ç—è–±—Ä—è 2024\n\n"
            "üé≤ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤:\n"
            "‚Ä¢ –î–∞—Ç–∞: 5 –Ω–æ—è–±—Ä—è 2024\n"
            "‚Ä¢ –í—Ä–µ–º—è: 15:00 –ú–°–ö\n"
            "‚Ä¢ –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ\n\n"
            "üèÜ –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:\n"
            "‚Ä¢ –°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º\n"
            "‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö\n\n"
            "üìû –°–≤—è–∑—å —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏:\n"
            "‚Ä¢ –í —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n"
            "‚Ä¢ –ü–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—É"
        )
        
        await callback.message.edit_text(dates_text)
    
    @router.callback_query(F.data == "info_fairness")
    async def show_fairness(callback: CallbackQuery):
        """Show fairness guarantees"""
        fairness_text = (
            "‚öñÔ∏è –ì–∞—Ä–∞–Ω—Ç–∏–∏ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n\n"
            "üîí –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏:\n"
            "‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª\n"
            "‚Ä¢ –ü—É–±–ª–∏—á–Ω—ã–π —Ö–µ—à –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n\n"
            "üë• –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å:\n"
            "‚Ä¢ –ü—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n"
            "‚Ä¢ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π\n"
            "‚Ä¢ –í–∏–¥–µ–æ–∑–∞–ø–∏—Å—å –≤—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞\n\n"
            "üìä –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:\n"
            "‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n"
            "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n"
            "‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n"
            "üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:\n"
            "‚Ä¢ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n"
            "‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∂–∞–ª–æ–± –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"
        )
        
        await callback.message.edit_text(fairness_text)
    
    @router.callback_query(F.data == "info_contacts")
    async def show_contacts(callback: CallbackQuery):
        """Show organizer contacts"""
        contacts_text = (
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤\n\n"
            "üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:\n"
            "–û–û–û '–¢–æ—Ä–≥–æ–≤–∞—è —Å–µ—Ç—å'\n\n"
            "üìç –ê–¥—Ä–µ—Å:\n"
            "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123\n\n"
            "‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏:\n"
            "+7 (800) 123-45-67\n"
            "(–∑–≤–æ–Ω–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)\n\n"
            "üìß Email:\n"
            "lottery@example.com\n\n"
            "üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:\n"
            "–ü–Ω-–ü—Ç: 9:00 - 18:00 –ú–°–ö\n"
            "–°–±-–í—Å: –≤—ã—Ö–æ–¥–Ω—ã–µ\n\n"
            "üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –±–æ—Ç–µ:\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞'\n"
            "–≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"
        )
        
        await callback.message.edit_text(contacts_text)
    
    @router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
    async def show_help(message: Message):
        """Show general help"""
        help_text = (
            "‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
            "üöÄ –ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'\n"
            "2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ\n"
            "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏\n"
            "4. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!\n\n"
            "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:\n"
            "‚Ä¢ '–ú–æ–π —Å—Ç–∞—Ç—É—Å' - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É\n"
            "‚Ä¢ '–û —Ä–æ–∑—ã–≥—Ä—ã—à–µ' - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
            "‚Ä¢ '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞' - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n\n"
            "‚ùóÔ∏è –ü—Ä–æ–±–ª–µ–º—ã?\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é."
        )
        
        await message.answer(
            help_text,
            reply_markup=get_main_menu_keyboard()
        )
    
    @router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    async def back_to_menu(message: Message):
        """Return to main menu"""
        await message.answer(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=get_main_menu_keyboard()
        )
    
    return router